{
    "openapi": "3.0.0",
    "info": {
        "title": "CLONE CONEXT",
        "description": "Clone conext document api",
        "contact": {
            "email": "nguyentichduy10a15cmg@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/abouts": {
            "get": {
                "tags": [
                    "About"
                ],
                "summary": "Get list of about",
                "operationId": "App\\Http\\Controllers\\AboutController::index",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "About not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Login with a email and password",
                "operationId": "App\\Http\\Controllers\\Auth\\AuthController::login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "thian200298@gmail.com",
                                    "password": "123123123"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errcode": {
                                            "description": "The response code",
                                            "type": "integer"
                                        },
                                        "errmsg": {
                                            "description": "The response message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The response data",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errcode": 1,
                                        "errmsg": "ok",
                                        "data": {
                                            "email": "thian200298@gmail.com",
                                            "password": "123123123"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Login type not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "get": {
                "tags": [
                    "Logout"
                ],
                "summary": "Logout",
                "operationId": "App\\Http\\Controllers\\Auth\\AuthController::logout",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Business not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/business-types": {
            "get": {
                "tags": [
                    "Business"
                ],
                "summary": "Get list of contact",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errcode": {
                                            "description": "The response code",
                                            "type": "integer"
                                        },
                                        "errmsg": {
                                            "description": "The response message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The response data",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errcode": 1,
                                        "errmsg": "ok",
                                        "data": {
                                            "name": "name bussiness nha"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Business not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/business-types": {
            "get": {
                "tags": [
                    "Business"
                ],
                "summary": "Get list of contact",
                "operationId": "App\\Http\\Controllers\\BusinessTypeController::index",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Business not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Business"
                ],
                "summary": "Adds a new business-types",
                "operationId": "App\\Http\\Controllers\\BusinessTypeController::store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name bussiness nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errcode": {
                                            "description": "The response code",
                                            "type": "integer"
                                        },
                                        "errmsg": {
                                            "description": "The response message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The response data",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errcode": 1,
                                        "errmsg": "ok",
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Business type not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/admin/business-types/{id}": {
            "put": {
                "tags": [
                    "Business"
                ],
                "summary": "Update an existing bussiness",
                "description": "",
                "operationId": "App\\Http\\Controllers\\BusinessTypeController::update",
                "requestBody": {
                    "description": "Bussiness object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name bussiness nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Bussiness type not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "api/admin/business-types/{id}": {
            "delete": {
                "tags": [
                    "Business"
                ],
                "summary": "Delete business-types",
                "description": "This can only be done by the logged in user.",
                "operationId": "App\\Http\\Controllers\\BusinessTypeController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The business-types that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Business type not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of contact",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of contact",
                "operationId": "App\\Http\\Controllers\\CategoryController::index",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Adds a new categories",
                "operationId": "App\\Http\\Controllers\\CategoryController::store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category_name": {
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "category_name": "category nha",
                                    "quantity": "quantity nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/categories/{id}": {
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update an existing categories",
                "description": "",
                "operationId": "App\\Http\\Controllers\\CategoryController::update",
                "requestBody": {
                    "description": "Categories object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category_name": {
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "category_name": "category nha",
                                    "quantity": "quantity nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "api/admin/categories/{id}": {
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category",
                "description": "This can only be done by the logged in user.",
                "operationId": "App\\Http\\Controllers\\CategoryController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The category that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/contacts": {
            "get": {
                "tags": [
                    "Contact"
                ],
                "summary": "Get list of contact",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/contact": {
            "post": {
                "tags": [
                    "Contact"
                ],
                "summary": "Adds a new contacts",
                "operationId": "App\\Http\\Controllers\\ContactController::store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "phone_number": {
                                        "type": "string"
                                    },
                                    "subject": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "email contact nha",
                                    "name": "name contact nha",
                                    "subject": "subject contact nha",
                                    "content": "content nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errcode": {
                                            "description": "The response code",
                                            "type": "integer"
                                        },
                                        "errmsg": {
                                            "description": "The response message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The response data",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errcode": 1,
                                        "errmsg": "ok",
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "api/admin/contact/{id}": {
            "delete": {
                "tags": [
                    "Contact"
                ],
                "summary": "Delete contact",
                "description": "This can only be done by the logged in user.",
                "operationId": "App\\Http\\Controllers\\ContactController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The contact that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get list of events",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/events": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Adds a new events",
                "operationId": "App\\Http\\Controllers\\EventController::store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "image": {
                                        "type": "string"
                                    },
                                    "start_time": {
                                        "type": "DateTime"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "title": "title event nha",
                                    "image": "image.png",
                                    "start_time": "12-3-2019 4:1:1",
                                    "description": "hihi"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errcode": {
                                            "description": "The response code",
                                            "type": "integer"
                                        },
                                        "errmsg": {
                                            "description": "The response message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The response data",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errcode": 1,
                                        "errmsg": "ok",
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/events/{id}": {
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update an existing events",
                "description": "",
                "operationId": "App\\Http\\Controllers\\EventController::update",
                "requestBody": {
                    "description": "Events object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "image": {
                                        "type": "string"
                                    },
                                    "start_time": {
                                        "type": "DateTime"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "title": "title event nha",
                                    "image": "image.png",
                                    "start_time": "12-3-2019 4:1:1",
                                    "description": "hihi"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "api/admin/events/{id}": {
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete events",
                "description": "This can only be done by the logged in user.",
                "operationId": "App\\Http\\Controllers\\EventController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The event that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/expertises": {
            "get": {
                "tags": [
                    "Expertises"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Expertise not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/expertises": {
            "post": {
                "tags": [
                    "Expertises"
                ],
                "summary": "Adds a new expertises",
                "operationId": "App\\Http\\Controllers\\ExpertiseController::store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name expertises nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errcode": {
                                            "description": "The response code",
                                            "type": "integer"
                                        },
                                        "errmsg": {
                                            "description": "The response message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The response data",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errcode": 1,
                                        "errmsg": "ok",
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Expertise not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/admin/expertises/{id}": {
            "put": {
                "tags": [
                    "Expertises"
                ],
                "summary": "Update an existing expertises",
                "description": "",
                "operationId": "App\\Http\\Controllers\\ExpertiseController::update",
                "requestBody": {
                    "description": "Expertises object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name expertises nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Expertise not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "api/admin/expertises/{id}": {
            "delete": {
                "tags": [
                    "Expertises"
                ],
                "summary": "Delete expertises",
                "description": "This can only be done by the logged in user.",
                "operationId": "App\\Http\\Controllers\\ExpertiseController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The expertises that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Expertise not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/explores": {
            "get": {
                "tags": [
                    "Explore"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Explore not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/explore": {
            "post": {
                "tags": [
                    "Explore"
                ],
                "summary": "Adds a new business-types",
                "operationId": "App\\Http\\Controllers\\ExploreController::store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name explore nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errcode": {
                                            "description": "The response code",
                                            "type": "integer"
                                        },
                                        "errmsg": {
                                            "description": "The response message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The response data",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errcode": 1,
                                        "errmsg": "ok",
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Explore not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/explore/{id}": {
            "put": {
                "tags": [
                    "Explore"
                ],
                "summary": "Update an existing explore",
                "description": "",
                "operationId": "App\\Http\\Controllers\\ExploreController::update",
                "requestBody": {
                    "description": "Explore object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name explore nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Pet not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "api/admin/explore/{id}": {
            "delete": {
                "tags": [
                    "Explore"
                ],
                "summary": "Delete explore",
                "description": "This can only be done by the logged in user.",
                "operationId": "App\\Http\\Controllers\\ExploreController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The explore that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Explore not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/faqs": {
            "get": {
                "tags": [
                    "Faqs"
                ],
                "summary": "Get list of faqs",
                "operationId": "App\\Http\\Controllers\\FaqController::index",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Faq not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/hot-needs": {
            "get": {
                "tags": [
                    "Hot-needs"
                ],
                "summary": "Get list of hot-needs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "HotNeed not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/my-hot-needs": {
            "get": {
                "tags": [
                    "Hot-needs"
                ],
                "operationId": "App\\Http\\Controllers\\HotNeedController::getHotNeedByUser",
                "responses": {
                    "200": {
                        "description": "Display a listing of hot-needs."
                    }
                }
            }
        },
        "/api/admin/hot-needs": {
            "post": {
                "tags": [
                    "Hot-needs"
                ],
                "summary": "Adds a new hot-needs",
                "operationId": "App\\Http\\Controllers\\HotNeedController::store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name not need nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errcode": {
                                            "description": "The response code",
                                            "type": "integer"
                                        },
                                        "errmsg": {
                                            "description": "The response message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The response data",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errcode": 1,
                                        "errmsg": "ok",
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "HotNeed not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/hot-needs/{id}": {
            "put": {
                "tags": [
                    "Hot-needs"
                ],
                "summary": "Update an existing hot-needs",
                "description": "",
                "operationId": "App\\Http\\Controllers\\HotNeedController::update",
                "requestBody": {
                    "description": "Hot-needs object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name not need nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "HotNeed not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "api/admin/hot-needs/{id}": {
            "delete": {
                "tags": [
                    "Hot-needs"
                ],
                "summary": "Delete hot-needs",
                "description": "This can only be done by the logged in user.",
                "operationId": "App\\Http\\Controllers\\HotNeedController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The hot-needs that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "HotNeed not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/local-conexts": {
            "get": {
                "tags": [
                    "Local-conexts"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Local conext not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/local-conexts": {
            "get": {
                "tags": [
                    "Local-conexts"
                ],
                "operationId": "App\\Http\\Controllers\\LocalConextController::index",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Local conext not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Local-conexts"
                ],
                "summary": "Adds a new local-conexts",
                "operationId": "App\\Http\\Controllers\\LocalConextController::store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name local conext nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errcode": {
                                            "description": "The response code",
                                            "type": "integer"
                                        },
                                        "errmsg": {
                                            "description": "The response message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The response data",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errcode": 1,
                                        "errmsg": "ok",
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Local conext not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/admin/local-conexts/{id}": {
            "put": {
                "tags": [
                    "Local-conexts"
                ],
                "summary": "Update an existing local-conexts",
                "description": "",
                "operationId": "App\\Http\\Controllers\\LocalConextController::update",
                "requestBody": {
                    "description": "Local-conexts object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name local conext nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Local conext not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "api/admin/local-conexts/{id}": {
            "delete": {
                "tags": [
                    "Local-conexts"
                ],
                "summary": "Delete local-conexts",
                "description": "This can only be done by the logged in user.",
                "operationId": "App\\Http\\Controllers\\LocalConextController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The local-conexts that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Local conext not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/term-and-policies": {
            "get": {
                "tags": [
                    "Term-and-policies"
                ],
                "summary": "Get list of term-and-policies",
                "operationId": "App\\Http\\Controllers\\TermAndPolicyController::index",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Term and policy not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/auth/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "businessType": {
                                        "type": "string"
                                    },
                                    "expertise": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "businessType": 1,
                                    "expertise": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Users not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "operationId": "App\\Http\\Controllers\\UserController::index",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "businessType": {
                                        "type": "string"
                                    },
                                    "expertise": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "businessType": 1,
                                    "expertise": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Users not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Adds a new users",
                "operationId": "App\\Http\\Controllers\\UserController::store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "integer"
                                    },
                                    "introduce": {
                                        "type": "string"
                                    },
                                    "workplace": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "business_type_id": {
                                        "type": "integer"
                                    },
                                    "expertise_id": {
                                        "type": "string"
                                    },
                                    "local_conext_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "email@gmail.com",
                                    "address": "address nha",
                                    "gender": 2,
                                    "introduce": "introduce nha",
                                    "workplace": "workplace nha",
                                    "business_type_id": 1,
                                    "expertise_id": 1,
                                    "local_conext_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errcode": {
                                            "description": "The response code",
                                            "type": "integer"
                                        },
                                        "errmsg": {
                                            "description": "The response message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The response data",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errcode": 1,
                                        "errmsg": "ok",
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Users not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/admin/users/{id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing users",
                "description": "",
                "operationId": "App\\Http\\Controllers\\UserController::update",
                "requestBody": {
                    "description": "Users object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "integer"
                                    },
                                    "introduce": {
                                        "type": "string"
                                    },
                                    "workplace": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "business_type_id": {
                                        "type": "integer"
                                    },
                                    "expertise_id": {
                                        "type": "string"
                                    },
                                    "local_conext_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "email@gmail.com",
                                    "address": "address nha",
                                    "gender": 2,
                                    "introduce": "introduce nha",
                                    "workplace": "workplace nha",
                                    "business_type_id": 1,
                                    "expertise_id": 1,
                                    "local_conext_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Users not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "api/admin/users/{id}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete users",
                "description": "This can only be done by the logged in user.",
                "operationId": "App\\Http\\Controllers\\UserController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The users that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Users not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/user-random": {
            "get": {
                "tags": [
                    "Users"
                ],
                "operationId": "App\\Http\\Controllers\\UserController::getUserRandom",
                "responses": {
                    "200": {
                        "description": "Display a listing random of users."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Users not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/vouchers": {
            "get": {
                "tags": [
                    "Vouchers"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Voucher not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/vouchers": {
            "get": {
                "tags": [
                    "Vouchers"
                ],
                "operationId": "App\\Http\\Controllers\\VoucherController::index",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Voucher not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vouchers"
                ],
                "summary": "Adds a new vouchers",
                "operationId": "App\\Http\\Controllers\\VoucherController::store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "image": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "expired_on": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name voucher nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errcode": {
                                            "description": "The response code",
                                            "type": "integer"
                                        },
                                        "errmsg": {
                                            "description": "The response message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The response data",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errcode": 1,
                                        "errmsg": "ok",
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Voucher not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/admin/vouchers/{id}": {
            "put": {
                "tags": [
                    "Vouchers"
                ],
                "summary": "Update an existing vouchers",
                "description": "",
                "operationId": "App\\Http\\Controllers\\VoucherController::update",
                "requestBody": {
                    "description": "Vouchers object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "image": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "expired_on": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name voucher nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Voucher not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "api/admin/vouchers/{id}": {
            "delete": {
                "tags": [
                    "Vouchers"
                ],
                "summary": "Delete vouchers",
                "description": "This can only be done by the logged in user.",
                "operationId": "App\\Http\\Controllers\\VoucherController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The vouchers that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Voucher not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/work-places": {
            "get": {
                "tags": [
                    "Work-places"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "zone": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "zone": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errcode": {
                                            "description": "The response code",
                                            "type": "integer"
                                        },
                                        "errmsg": {
                                            "description": "The response message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The response data",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errcode": 1,
                                        "errmsg": "ok",
                                        "data": {
                                            "id": 1,
                                            "name": "Campus K Coworking Space",
                                            "price": 50000,
                                            "address": "15th Floor, Tower B, Song Da Building, Pham Hung, My Dinh 1, Nam Tu Liem, Hanoi",
                                            "image": "https://storage.googleapis.com/conext-production/99935659_55835531_17331773_75997746.png",
                                            "local_conext_id": 1,
                                            "local_conext": {
                                                "id": 1,
                                                "name": "Ha Noi"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Workplace not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/admin/work-places": {
            "get": {
                "tags": [
                    "Work-places"
                ],
                "operationId": "App\\Http\\Controllers\\WorkPlaceController::index",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "zone": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name workplace nha",
                                    "price": 12000,
                                    "0": "address nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errcode": {
                                            "description": "The response code",
                                            "type": "integer"
                                        },
                                        "errmsg": {
                                            "description": "The response message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The response data",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errcode": 1,
                                        "errmsg": "ok",
                                        "data": {
                                            "id": 1,
                                            "name": "Campus K Coworking Space",
                                            "price": 50000,
                                            "address": "15th Floor, Tower B, Song Da Building, Pham Hung, My Dinh 1, Nam Tu Liem, Hanoi",
                                            "image": "https://storage.googleapis.com/conext-production/99935659_55835531_17331773_75997746.png",
                                            "local_conext_id": 1,
                                            "local_conext": {
                                                "id": 1,
                                                "name": "Ha Noi"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Workplace not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Work-places"
                ],
                "summary": "Adds a new work-places",
                "operationId": "App\\Http\\Controllers\\WorkPlaceController::store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name workplace nha",
                                    "price": 12000,
                                    "0": "address nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errcode": {
                                            "description": "The response code",
                                            "type": "integer"
                                        },
                                        "errmsg": {
                                            "description": "The response message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "The response data",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errcode": 1,
                                        "errmsg": "ok",
                                        "data": {
                                            "0": "address nha",
                                            "name": "name workplace nha",
                                            "price": 12000
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Workplace not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/admin/work-places/{id}": {
            "put": {
                "tags": [
                    "Work-places"
                ],
                "summary": "Update an existing work-places",
                "description": "",
                "operationId": "App\\Http\\Controllers\\WorkPlaceController::update",
                "requestBody": {
                    "description": "Work-places object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "name workplace nha",
                                    "price": 12000,
                                    "0": "address nha"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Workplace not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "api/admin/work-places/{id}": {
            "delete": {
                "tags": [
                    "Work-places"
                ],
                "summary": "Delete work-places",
                "description": "This can only be done by the logged in user.",
                "operationId": "App\\Http\\Controllers\\WorkPlaceController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The work-places that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Workplace not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/location": {
            "get": {
                "tags": [
                    "Work-places"
                ],
                "operationId": "App\\Http\\Controllers\\WorkPlaceController::location",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Workplace not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "405": {
                        "description": "Validation exception",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearer": {
                "type": "http",
                "description": "Authorization token obtained from logging in.",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}